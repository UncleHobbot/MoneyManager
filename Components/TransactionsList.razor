@using Microsoft.FluentUI.AspNetCore.Components

<FluentDesignSystemProvider Density="-1">

    @if (Mode == TransactionListModeEnum.Full)
    {
        <FluentDataGrid Items="@transactions" ResizableColumns=true Pagination="@pagination"
                        GridTemplateColumns="@gridTemplateColumns" Style="@gridStyle" Virtualize="true" ItemSize="32">

            @*Column 1 - Date*@
            <PropertyColumn Property="x => x.Date" Format="d" Align="Align.Center" Title="Date" Sortable="true"
                            InitialSortDirection="SortDirection.Descending" IsDefaultSortColumn="true"/>

            @*Column 2 - Account*@
            <TemplateColumn Title="Account" Align="Align.Center" Sortable="true" SortBy="@accountSort">
                <div style="display:flex;width:190px">
                    <div style="display:flex;align-items: center">@context.Account.ShownName</div>
                    <FluentSpacer/>
                    <FluentButton Id="@($"filterByAccount_{context.Id}")" IconEnd="@(new Icons.Filled.Size12.Filter())" Style="height: 20px"
                                  OnClick="@(() => FilterByAccount(context, true))"/>
                    <FluentTooltip Anchor="@($"filterByAccount_{context.Id}")">Filter by @context.Account.ShownName Account</FluentTooltip>

                    <FluentButton Id="@($"filterByAccountR_{context.Id}")" IconEnd="@(new Icons.Filled.Size12.Dismiss())" Style="height: 20px;margin-right: 10px"
                                  OnClick="@(() => FilterByAccount(context, false))"/>
                    <FluentTooltip Anchor="@($"filterByAccountR_{context.Id}")">Remove filter</FluentTooltip>
                    <div style="display:flex;align-items: center"></div>
                </div>
            </TemplateColumn>

            @*Column 3 - Amount*@
            <PropertyColumn Property="x => x.AmountExt" Format="c2" Align="Align.End" Title="Amount"/>

            @*Column 4 - Category*@
            <TemplateColumn Align="Align.Center" Title="@("Category" + (activeFilterCategory != null ? $" ({activeFilterCategory.Name})" : ""))" Sortable="true" SortBy="@categorySort">
                @if (CategoryFilters)
                {
                    <div style="display:flex;width:290px">
                        <FluentIcon Value="@(context.Category.objIcon)"/>
                        <div style="display:flex;align-items: center"> @context.Category.Name </div>
                        <FluentSpacer/>
                        <FluentButton Id="@($"filterByCategory_{context.Id}")" IconEnd="@(new Icons.Filled.Size12.Filter())" Style="height: 20px"
                                      OnClick="@(() => FilterByCategory(context, true))"/>
                        <FluentTooltip Anchor="@($"filterByCategory_{context.Id}")">Filter by @context.Category.Name Category and childs</FluentTooltip>
                        <FluentButton Id="@($"filterByCategoryR_{context.Id}")" IconEnd="@(new Icons.Filled.Size12.Dismiss())" Style="height: 20px;margin-right: 10px"
                                      OnClick="@(() => FilterByCategory(context, false))"/>
                        <FluentTooltip Anchor="@($"filterByCategoryR_{context.Id}")">Remove filter</FluentTooltip>
                        <div style="display:flex;align-items: center"></div>
                    </div>
                }
                else
                {
                    <FluentIcon Value="@(context.Category.objIcon)" Style="margin-right: 15px"/>
                    @context.Category.Name
                }
            </TemplateColumn>

            @*Column 5 - Description*@
            <PropertyColumn Property="x => x.Description" Title="Description" Sortable="true" Filtered="!string.IsNullOrWhiteSpace(filterDescription)">
                <ColumnOptions>
                    <div class="search-box">
                        <FluentSearch type="search" Autofocus=true @bind-Value=filterDescription @oninput="FilterByDescription"
                                      @bind-Value:after="FilterByDescriptionClear" Placeholder="Description..."/>
                    </div>
                </ColumnOptions>
            </PropertyColumn>

            @*Column 6 - Rule applied*@
            <TemplateColumn Align="Align.Center" Title="Rule applied" Sortable="true" SortBy="@ruleSort">
                @if (context.IsRuleApplied)
                {
                    <FluentIcon Value="@(new Icons.Regular.Size20.Tag())"/>
                }
            </TemplateColumn>

            @*Column 7 - Actions*@
            <TemplateColumn Align="@Align.End" Title="Actions" Sortable="false">
                <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())" Style="height: 20px" OnClick="@(() => EditTransaction(context))"/>
            </TemplateColumn>

        </FluentDataGrid>

        <FluentPaginator State="@pagination">
            <SummaryTemplate>
                Total <strong>@(Math.Abs(transactions.ToList().Sum(x => x.AmountExt)).ToString("C"))</strong> in <strong>@pagination.TotalItemCount</strong> items
            </SummaryTemplate>
        </FluentPaginator>
    }
    else if (Mode == TransactionListModeEnum.Short)
    {
        <FluentDataGrid Items="@transactions" GridTemplateColumns="1fr 6fr 1fr" Style="@gridStyle" Virtualize="true" ItemSize="54">
            <ChildContent>
            <PropertyColumn Property="x => x.Date" Format="MMM dd" Align="Align.Center" IsDefaultSortColumn="true" InitialSortDirection="SortDirection.Descending"/>
            <TemplateColumn Align="Align.Start">
                <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" Width="100%" HorizontalGap="10">
                    <FluentIcon Value="@(context.Category.objIcon)"/>
                    <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Left" VerticalGap="0">
                        <FluentLabel Color="Color.Neutral">@context.Description</FluentLabel>
                        <FluentLabel Color="Color.Info">@context.Account.ShownName</FluentLabel>
                    </FluentStack>
                </FluentStack>
            </TemplateColumn>
            <PropertyColumn Property="x => x.AmountExt" Format="c2" Align="Align.End" Title="Amnt"/>
            @if (EditEnable)
            {
                <TemplateColumn Align="@Align.End" Sortable="false">
                    <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())" Style="height: 20px" OnClick="@(() => EditTransaction(context))"/>
                </TemplateColumn>
            }
            </ChildContent>
            <EmptyContent>
                <FluentIcon Value="@(new Icons.Filled.Size24.Crown())" Color="@Color.Accent" />&nbsp; Nothing to see here. Carry on!
            </EmptyContent>
        </FluentDataGrid>
    }

</FluentDesignSystemProvider>