@page "/"
@inject FolderPicker folderPicker
@inject IDialogService DialogService
@using Microsoft.FluentUI.AspNetCore.Components

<h3>Home</h3>

<FluentGrid Spacing="2">
    <FluentGridItem xs="4">
        <FluentCard Height="400px">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.ArrowUpload())"/>
                </FluentGridItem>
                <FluentGridItem xs="11">
                    <FluentLabel Typo="Typography.PaneHeader"> Import transaction file </FluentLabel>
                </FluentGridItem>
                <FluentGridItem xs="12">
                    <FluentSelect TOption="string" @bind-Value="@importFileType" Label="Select file type">
                        <FluentOption Value="@ImportTypeEnum.Mint_CSV.ToString()">Mint csv</FluentOption>
                        <FluentOption Value="@ImportTypeEnum.RBC_CSV.ToString()">RBC csv</FluentOption>
                        <FluentOption Value="@ImportTypeEnum.CIBC_CSV.ToString()">CIBC csv</FluentOption>
                    </FluentSelect>
                </FluentGridItem>
                <FluentGridItem xs="12">
                    <FluentTextField @bind-Value="importFile" Label="Select file to import" Style="width: 100%">
                        <FluentIcon Value="@(new Icons.Regular.Size16.FolderSearch())" Color="@Color.Neutral" Slot="end" OnClick="SelectImportFile"/>
                    </FluentTextField>
                </FluentGridItem>
                <FluentGridItem xs="8"/>
                <FluentGridItem xs="4">
                    <FluentButton Appearance="Appearance.Accent" OnClick="@ImportFile">Import</FluentButton>
                </FluentGridItem>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

    <FluentGridItem xs="4">
        <FluentCard Height="400px">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.TagQuestionMark())"/>
                </FluentGridItem>
                <FluentGridItem xs="11">
                    <FluentNavLink Href="transactions">
                        <ChildContent>
                            <FluentLabel Typo="Typography.PaneHeader"> Uncategorized transactions </FluentLabel>
                        </ChildContent>
                    </FluentNavLink>
                </FluentGridItem>
                <FluentGridItem xs="12"/>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

    <FluentGridItem xs="4">
        <FluentCard Height="400px">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.New())"/>
                </FluentGridItem>
                <FluentGridItem xs="11">
                    <FluentNavLink Href="transactions">
                        <ChildContent>
                            <FluentLabel Typo="Typography.PaneHeader"> Recent transactions </FluentLabel>
                        </ChildContent>
                    </FluentNavLink>
                </FluentGridItem>
                <FluentGridItem xs="12"/>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

    <FluentGridItem xs="4">
        <FluentCard Height="400px">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.DataArea())"/>
                </FluentGridItem>
                <FluentGridItem xs="11">
                    <FluentNavLink Href="cumulative">
                        <ChildContent>
                            <FluentLabel Typo="Typography.PaneHeader"> Cumulative spending </FluentLabel>
                        </ChildContent>
                    </FluentNavLink>
                </FluentGridItem>
                <FluentGridItem xs="12">
                    <CumulativeSpending Height="320" ShowCaption="false" ShowToolbar="false"/>
                </FluentGridItem>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

    <FluentGridItem xs="4">
        <FluentCard Height="400px" AreaRestricted="false">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.CalendarDataBar())"/>
                </FluentGridItem>
                <FluentGridItem xs="5">
                    <FluentNavLink Href="income">
                        <ChildContent>
                            <FluentLabel Typo="Typography.PaneHeader"> Net Income </FluentLabel>
                        </ChildContent>
                    </FluentNavLink>
                </FluentGridItem>
                <FluentGridItem xs="6">
                    <FluentSelect TOption="string" @bind-Value="@incomeChartPeriod">
                        <FluentOption Value="12">Last 12 months</FluentOption>
                        <FluentOption Value="1">This year</FluentOption>
                        <FluentOption Value="2">Last year</FluentOption>
                        <FluentOption Value="3">This + Last year</FluentOption>
                    </FluentSelect>
                </FluentGridItem>
                <FluentGridItem xs="12">
                    <NetIncome ChartPeriod="@incomeChartPeriod" Height="320" ShowCaption="false" ShowToolbar="false"/>
                </FluentGridItem>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

    <FluentGridItem xs="4">
        <FluentCard Height="400px" AreaRestricted="false">
            <FluentGrid Spacing="1">
                <FluentGridItem xs="1">
                    <FluentIcon Value="@(new Icons.Filled.Size24.DataPie())"/>
                </FluentGridItem>
                <FluentGridItem xs="5">
                    <FluentNavLink Href="income">
                        <ChildContent>
                            <FluentLabel Typo="Typography.PaneHeader"> Spending </FluentLabel>
                        </ChildContent>
                    </FluentNavLink>
                </FluentGridItem>
                <FluentGridItem xs="6">
                    <FluentSelect TOption="string" @bind-Value="@spendingChartPeriod">
                        <FluentOption Value="12">Last 12 months</FluentOption>
                        <FluentOption Value="m1">This month</FluentOption>
                        <FluentOption Value="m2">Last month</FluentOption>
                        <FluentOption Value="1">This year</FluentOption>
                        <FluentOption Value="2">Last year</FluentOption>
                        <FluentOption Value="3">This + Last year</FluentOption>
                    </FluentSelect>
                </FluentGridItem>
                <FluentGridItem xs="12">
                    <Spending ChartPeriod="@spendingChartPeriod" Height="320" ShowCaption="false" ShowToolbar="false"/>
                </FluentGridItem>
            </FluentGrid>
        </FluentCard>
    </FluentGridItem>

</FluentGrid>

@code {
    string importFileType = ImportTypeEnum.Mint_CSV.ToString();
    string importFile;
    string incomeChartPeriod = "1";
    string spendingChartPeriod = "m1";

    void SelectImportFile()
    {
        string filterName = null;
        string filterExt = null;
        if (importFileType == ImportTypeEnum.Mint_CSV.ToString() || importFileType == ImportTypeEnum.RBC_CSV.ToString() || importFileType == ImportTypeEnum.CIBC_CSV.ToString())
        {
            filterName = "CSV file";
            filterExt = "csv";
        }

        importFile = folderPicker.DisplayFilePicker(filterName, filterExt);
    }

    async Task ImportFile()
    {
        if (Enum.TryParse(importFileType, out ImportTypeEnum importTypeEnum) && !string.IsNullOrWhiteSpace(importFile))
        {
            var dialog = await DialogService.ShowDialogAsync<ImportFileDialog>(new ImportFileParams(importTypeEnum, importFile), new DialogParameters
            {
                Height = "300px",
                Width = "600px",
                Title = "Import File",
                PreventDismissOnOverlayClick = true,
                PreventScroll = true,
            });

            var result = await dialog.Result;
        }
    }

}