@page "/income"
@using Microsoft.FluentUI.AspNetCore.Components
@using MoneyManager.Model.Chart
@using Align = Microsoft.FluentUI.AspNetCore.Components.Align
@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@inject DataService dataService

<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Top" Width="100%" HorizontalGap="20">
    <NetIncome Width="1000" Height="800" ChartPeriod="@DataService.NetIncomeChartPeriod"/>

    <FluentStack Orientation="Orientation.Vertical">
        <FluentSelect TOption="string" @bind-Value="@DataService.NetIncomeChartPeriod" Label="Select period" SelectedOptionChanged="UpdateChart">
            <FluentOption Value="12">Last 12 months</FluentOption>
            <FluentOption Value="1">This year</FluentOption>
            <FluentOption Value="2">Last year</FluentOption>
            <FluentOption Value="3">This + Last year</FluentOption>
        </FluentSelect>

        @if (!isLoading)
        {
            <FluentDataGrid Items="@DataQ">
                <TemplateColumn Title="Month">
                    @if (context.MonthKey == "t")
                    {
                        <b>@context.MonthLabel</b>
                    }
                    else
                    {
                        <NavLink href="@($"/month/{context.MonthKey}")">@context.MonthLabel</NavLink>
                    }
                </TemplateColumn>
                <PropertyColumn Property="x => x.Income" Format="c" Align="Align.End" Title="Income"/>
                <PropertyColumn Property="x => -1 * x.Expenses" Format="c" Align="Align.End" Title="Expense"/>
                <TemplateColumn Title="Net" Align="Align.End">
                    @if (context.Balance >= 0)
                    {
                        <span>@(context.Balance.ToString("c"))</span>
                    }
                    else
                    {
                        <span style='color:red'>@(context.Balance.ToString("c"))</span>
                    }
                </TemplateColumn>
            </FluentDataGrid>
        }
    </FluentStack>
</FluentStack>

@code {
    private List<BalanceChart> DataGrid { get; set; } = [];
    private IQueryable<BalanceChart> DataQ => DataGrid.AsQueryable();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        await LoadData();
        isLoading = false;
    }

    async Task UpdateChart()
    {
        isLoading = true;
        await LoadData();
        StateHasChanged();
        isLoading = false;
    }

    async Task LoadData()
    {
        DataGrid = await dataService.ChartNetIncome(DataService.NetIncomeChartPeriod);
        DataGrid.Add(new BalanceChart
        {
            Month = "Total",
            FirstDate = DateTime.Today.AddYears(100),
            MonthLabel = "Total",
            MonthKey = "t",
            Income = DataGrid.Sum(x => x.Income),
            Expenses = DataGrid.Sum(x => x.Expenses)
        });
    }
}